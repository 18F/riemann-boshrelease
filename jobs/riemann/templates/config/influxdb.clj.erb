(def influxdb-config {:host "<%= p("riemann.influxdb.host") %>"
                      :port <%= p("riemann.influxdb.port") %>
                      :username "<%= p("riemann.influxdb.username") %>"
                      :password "<%= p("riemann.influxdb.password") %>"
                      :db "<%= p("riemann.influxdb.database") %>"
                      :tag-fields #{:host :event_type :ip :index :job}
		      :version :<%= p("riemann.influxdb.version") %>})

(defn influx [opts]
  (batch 1000 30
    (let [opts (merge influxdb-config opts)
          throttled-alert (throttle 1 900 index)
          throttled-log (throttle 1 60 #(warn "influxdb-send-exception: " (.getMessage %)))
          send-influx (influxdb opts)]
      (async-queue! :agg {:queue-size 1e3
                          :core-pool-size 1
                          :max-pool-size 4
                          :keep-alive-time 60000}
        (fn influx-sending [event]
          (try
            (send-influx event)
            (catch Exception e
              (throttled-alert {:host "riemann.internal"
                                :service "send-influx"
                                :state "critical"
                                :metric 1
                                :tags []
                                :ttl 60
                                :description (.getMessage e)
                                :time (time/unix-time-real)})
               (throttled-log e))))))))
