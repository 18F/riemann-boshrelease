;; -*- mode: clojure; -*-
;; vim: filetype=clojure
(ns riemann.config
  (:require [riemann.time :as time]))

;; plugins includes
(include "/var/vcap/jobs/riemann/include/expire.clj")
(include "/var/vcap/jobs/riemann/include/interface.clj")
(include "/var/vcap/jobs/riemann/include/logging.clj")
(include "/var/vcap/jobs/riemann/include/alert.clj")
(include "/var/vcap/jobs/riemann/include/pagerduty.clj")
(include "/var/vcap/jobs/riemann/include/health_monitor.clj")
(include "/var/vcap/jobs/riemann/include/firehose.clj")
(include "/var/vcap/jobs/riemann/include/monitor.clj")
(include "/var/vcap/jobs/riemann/include/logsearch.clj")
(include "/var/vcap/jobs/riemann/include/elastic.clj")
(include "/var/vcap/jobs/riemann/include/rds.clj")
(include "/var/vcap/jobs/riemann/include/clamav.clj")
(include "/var/vcap/jobs/riemann/include/snort.clj")
(include "/var/vcap/jobs/riemann/include/disk.clj")
(include "/var/vcap/jobs/riemann/include/swap.clj")
(include "/var/vcap/jobs/riemann/include/influxdb.clj")
(include "/var/vcap/jobs/riemann/include/influxdb_backups.clj")
(include "/var/vcap/jobs/riemann/include/awslogs.clj")
(include "/var/vcap/jobs/riemann/include/nessus.clj")

(let [index (index)]
  (streams
   (default :ttl 60
     index
     (hm-alerts pd)

     <% if_p("riemann.logsearch.platform_logs_threshold", "riemann.logsearch.app_logs_threshold") do %>
     (logsearch-alerts pd)
     <% end %>

     (firehose-alerts pd)

     <% if p("riemann.monitor.metrics").length > 0 %>
     (monitor-alerts pd)
     <% end %>

     <% if p("riemann.awslogs.metrics").length > 0 %>
     (awslogs-alerts pd)
     <% end %>

     (elastic-alerts pd)

     <% if_p("riemann.rds.cpu_threshold") do %>
     (rds-alerts pd)
     <% end %>

     (nessus-alerts pd)
     (clamav-alerts pd)
     (snort-alerts pd)
     (disk-alerts pd)
     (swap-alerts pd)

     (influxdb-backup-alerts pd)

     ; Send events to influxdb with firehose attributes as tags
     (influx {:tags {"env" "<%= p("riemann.influxdb.database") %>"}
              :tag-fields #{:host :deployment :job :index :ip}}
             pd)
)))
