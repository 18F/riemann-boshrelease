; find VMs that aren't logging and emit new events
(defn find_vms_missing_logs []
  (by :host
    (project [(service "aws.ec2.describe-instances") (service "aws.logs.describe-log-streams.heartbeat")]
      (smap (fn [events]
        ; has the VM been up for at least 10 minutes?
        (if (> (:metric (first events)) 600)
          ; and it hasn't logged at all (nil) or in the last 10 minutes?
          (if (or (nil? (second events)) (> (:metric (second events)) 600))
            (reinject (event {:host (:host (first events)) :state "critical" :service "log.heartbeat"}))
            (reinject (event {:host (:host (first events)) :state "ok" :service "log.heartbeat"}))
          )
        )
      ))
    )
  )
)

; filter our any blips in logging, so only consistent failures trigger stop events
(defn stablize_missing_logs []
  (where (and (service "log.heartbeat") (state "critical"))
    (by :host
      (stable 60 :state
        #(reinject (event {:host (:host %) :state "critical" :service "stop-vm"}))
      )
    )
  )
)

; throttle stop events to one every X minutes so we don't accidentally kill the entire farm
(defn snapshot_and_stop_vm [pd]
  (where (service "stop-vm")
    (throttle 1 60
      ; TODO: raise PD alert, and shell out to AWS to snapshot and stop VM
      #(warn %)
    )
  )
)
