(defn find_vms_missing_logs []
  (by :host
    (project [(service "aws.ec2.describe-instances") (service "aws.logs.describe-log-streams.heartbeat")]
      (smap (fn [events]
        (let [
          instance (if (nil? (first events)) (:host (second events)) (:host (first events)))
          uptime (if (nil? (first events)) 0 (:metric (first events)))
          lastlog (if (nil? (second events)) 86400 (:metric (second events)))]

          (event {
            :service "log.heartbeat"
            :host instance
            :metric lastlog
            :state (if (and (> uptime 600) (> lastlog 600)) "critical" "ok")
          })
        ))

        (stable 60 :state
          (where (state "critical")
            (with :service "stop-vm" reinject)
          )
        )
      )
    )
  )
)

; throttle stop events to one every X minutes so we don't accidentally kill the entire farm
(defn snapshot_and_stop_vm [pd]
  (where (service "stop-vm")
    (throttle 1 60
      ; TODO: raise PD alert, and shell out to AWS to snapshot and stop VM
      #(warn %)
    )
  )
)
