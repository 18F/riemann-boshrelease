(defn find_vms_missing_logs []
  (where (or (service "aws.ec2.describe-instances") (service #"aws.logs.describe-log-streams.*"))
    #(info %)
    ; TODO: find describe-instances > X where describe-log-streams is > Y
    ; reinject new events based on Y:  Y > threshold: low alert and snapshot.  Y > threshold*2 raise alert to medium, Y > threshold*3, raise alert to high and snapshot again, and stop VM
  )
)

(defn snapshot_and_stop_vms []
 (where (service "reinjected-alert-service-from-above")
   #(warn %)
   ; TODO: rate limit (maybe with throttle) the number of snapshots and shutdowns we handle so if cloudwatch fails we don't kill the entire deployment immediately
   ; TODO: Use AWS Java libary or just clojure.java.shell to execute awscli to snapshot and stop instances
 )
)
